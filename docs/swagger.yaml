definitions:
  db.Expense:
    properties:
      amount:
        type: integer
      category:
        type: string
      created_at:
        type: string
      date:
        type: string
      id:
        type: string
      note:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  db.MonthlyPlan:
    properties:
      createdAt:
        type: string
      id:
        type: string
      month:
        description: e.g. "2025-05"
        type: string
      needs:
        type: integer
      savings:
        type: integer
      updatedAt:
        type: string
      userID:
        type: string
      wants:
        type: integer
    type: object
  handler.BudgetSummary:
    properties:
      needs:
        type: integer
      savings:
        type: integer
      wants:
        type: integer
    type: object
  handler.DashboardResponse:
    properties:
      budget_plan:
        $ref: '#/definitions/handler.BudgetSummary'
      needs:
        type: integer
      savings:
        type: integer
      total_expenses:
        type: integer
      total_savings:
        type: integer
      wants:
        type: integer
    type: object
  handler.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  handler.MonthlyPlanRequest:
    properties:
      month:
        description: e.g. "2025-05"
        type: string
      needs:
        type: integer
      savings:
        type: integer
      user_id:
        type: string
      wants:
        type: integer
    type: object
info:
  contact: {}
paths:
  /dashboard:
    get:
      description: Return top-level insights for the userâ€™s current month including
        expenses, breakdowns, and savings
      parameters:
      - description: User UUID
        in: query
        name: user_id
        required: true
        type: string
      - description: Month in format YYYY-MM
        in: query
        name: month
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.DashboardResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get dashboard summary
      tags:
      - dashboard
  /expenses:
    get:
      description: Returns a list of all expenses
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Expense'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get all expenses
      tags:
      - Expenses
    post:
      consumes:
      - application/json
      description: Add a new expense record
      parameters:
      - description: Expense data
        in: body
        name: expense
        required: true
        schema:
          $ref: '#/definitions/db.Expense'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/db.Expense'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Create a new expense
      tags:
      - Expenses
  /expenses/{id}:
    delete:
      description: Remove an expense by ID
      parameters:
      - description: Expense ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Delete an expense
      tags:
      - Expenses
    get:
      description: Retrieve expense by ID
      parameters:
      - description: Expense ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Expense'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get a single expense
      tags:
      - Expenses
    put:
      consumes:
      - application/json
      description: Update a specific expense by ID
      parameters:
      - description: Expense ID
        in: path
        name: id
        required: true
        type: string
      - description: Updated expense
        in: body
        name: expense
        required: true
        schema:
          $ref: '#/definitions/db.Expense'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Expense'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Update an expense
      tags:
      - Expenses
  /healthz:
    get:
      description: Returns OK
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Health Check
      tags:
      - Health
  /plans:
    post:
      consumes:
      - application/json
      description: Create or update a monthly budget plan split by needs, wants, and
        savings
      parameters:
      - description: Monthly plan input
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handler.MonthlyPlanRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.MonthlyPlan'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/db.MonthlyPlan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Create or update a monthly plan
      tags:
      - plans
  /plans/{month}:
    get:
      description: Retrieve a user's monthly budget plan by YYYY-MM
      parameters:
      - description: Month in format YYYY-MM
        in: path
        name: month
        required: true
        type: string
      - description: User UUID
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.MonthlyPlan'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Get a monthly plan by month
      tags:
      - plans
swagger: "2.0"
